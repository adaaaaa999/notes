#內容包含:高階函式使用、匿名函式，tuple、dict，模組導入，最後課程結束練習寫一個簡單的成績管理系統

#=============================================================================================
#高階函式
#=============================================================================================
# 函式要透過呼叫才會執行
# 在Python裡函式也是物件，也就是說可以被放到變數，因此稱為一級函式
def calculator():
    a = int(input('請輸入一個數字: '))
    b = int(input('請輸入一個數字: '))
    c = a * b
    print(f'總合為: {c}')
calculator() # 函式呼叫
#===========================================================
###參數值回傳
def score(a):
    if a >= 60:
        return '及格'
    else:
        return '不及格'
print(  score(70)  )
print(  score(30)  )
print(  score(80)  )
#===========================================================
###參數預設值、指定參數
def show(name, age='無資料',phone='無資料', addr='無資料', birth='無資料'):
 #有給預設值，之後沒輸入沒關係
 #如果參數有預設值(不管哪一個)，其右邊所有參數都必須要有預設值
 #ex不能第一個有'無資料'，後面沒有
    print(f'姓名: {name}, 年齡: {age}, 電話: {phone}, 地址: {addr}, 生日: {birth}')
show('aaron', 19, '0987654321', 'xxxx', '2000-01-01')
show('andy', 99, '0987654333', 'dsfsdxxxx', '2001-01-01')
show('apple', 99, '0987654333')
show('abner', phone =  '0987654333')#指定參數
#===========================================================
#filter用來過濾資料
#會根據條件過濾資料。只接受兩個參數，一個是條件函數（這個函數會對每個元素回傳True或False)，另一個是可迭代對象（像是列表）。只有那些讓條件函數回傳True的元素才會保留下來。
#map用來轉換資料
#用來對資料進行轉換。只接受兩個參數，一個是欲轉換函數，另一個是可迭代對象。map()會將轉換函數應用到可迭代對象中的每個元素上，並回傳轉換後的新集合。

#===========================================================
###函式回傳多個值
def cal(a, b):
    return a + b, a - b, a * b, a / b

a, b, c, d = cal(6, 3)
print(a)
print(b)
print(c)
print(d)

#===========================================================
###不定長度常數
def count(*a):#前面加一個*，代表不定長度，這樣不論輸入多少個參數都可以執行
    return a
#會包裝成tuple
print(count(1,2))
print(count(1,2,3))
print(count(1,2,3,4))
print(count(1,2,3,4,5,6))

def count1(*a):
    total=0
    for i in a:
        total += i
    return total
print(count1(1,2))
print(count1(1,2,3))
print(count1(1,2,3,4))
print(count1(1,2,3,4,5,6))

#def func(*a,b): *不可給a，因為多個參數會不知道給a還是b。不定長度參數可以給予b
    #return
def funcc(**a): #如果是**的不定長度參數，會變成字典
    #如果是字典，就一定得輸入key
    #func(a=1,b=2,c=3)，需要使用指定參數方式才能夠變成字典
    print(a)

#一個*和兩個**可以進行混搭
#一個的放前面，兩個的放後面
def fuu(*a,**b):
    return a,b

print(fuu(1,2,3,4,s=1,g=5))#前面會被打包成tuple，後面會變成字典

#=============================================================================================
#匿名函式
#=============================================================================================
k = lambda a,b:a>b #左邊是參數，後面是運算，會回傳true或是false
print(k(5,6))
print(k(4,3))
#===========================================================
def my_func (a):
    result= []
    for i in a:
        result.append(i ** 2) 
    return result

a = [2,8,6,5,10]
print(my_func(a))

def q3(a):
    return a**2

b= map(q3,a)
print(b)
k = lambda a,b:a>b
print(k(5,6))
print(k(4,3))
print((lambda a : a**3)(3))

#=============================================================================================
#tuple元組
#=============================================================================================
#元組的特性包含 : 1.唯讀 2.用小括號圈起來 3.裡面的資料無法被修改
#例如:
j=(4,5,)#完整的tuple寫法
j=4,5#即使沒有使用小括號，python依然會打包成為一個tuple
j1,j2=j #解包，會自動分派
print(j1,j2)

j=4,5,#這個和上面的一樣是指元組
j=6,#注意，只有一筆資料的話後面一定要加逗號，不然會被認為整數而不是元組

a=[]#list
b={}#空的是字典
c=set()#如果要建立空的set要這樣
d={3}#有資料是set

a = (99,88,66,55)
a1,*a2,a3=a #照順序解包，剩餘的丟入有*的
print(a1)
print(a2)
print(a3)

a[3]=8#會錯誤，因為不能改寫

#==========================================================
###變數交換
a = 3
b = 5
a, b = b, a
print(a, b)

#=============================================================================================
#dict字典
#=============================================================================================
#字典的每一筆資料都是key:value組成的，需要幫他取一個資料名稱key(可以是數字或字串)，然後給他一個值
a = {}#建立空的字典(這個不是set喔!!)
a = {'3':99}
#-----新增資料-----
#使用索引運算子
a[88]='HI' #88=key，把一個資料存到一個不存在的key，就會新增到字典裏面

#-----查詢資料-----
print(a['a'])#用名字(key)去查詢它裡面的value

#-----修改資料-----
a['a']= 66 #key存在即為修改，key不存在即為新增

#-----刪除資料-----
del a['a'] #把key刪除就可以了


